name: CI Core

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Run on key branches to make sure integration is good, otherwise run on all PR's
on:
  push:
    branches:
      - master
      - develop
      - "release/*"
      - staging
      - trying
      - rollup
  merge_group:
  pull_request:
  schedule:
    - cron: "0 0 * * *"

jobs:
  core:
    strategy:
      fail-fast: false
      matrix:
        cmd: ["go_core_tests"]
    name: Core Tests (${{ matrix.cmd }})
    runs-on: ubuntu20.04-32cores-128GB
    env:
      CL_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/chainlink_test?sslmode=disable
    steps:
      - name: Checkout the repo
        uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.6.0
      - name: Setup node
        uses: actions/setup-node@v3
      - name: Setup NodeJS
        uses: ./.github/actions/setup-nodejs
        with:
          prod: "true"
      - name: Setup Go
        uses: ./.github/actions/setup-go
      - name: Setup Solana
        uses: ./.github/actions/setup-solana
      - name: Setup wasmd
        uses: ./.github/actions/setup-wasmd
      - name: Setup Postgres
        uses: ./.github/actions/setup-postgres
      - name: Touching core/web/assets/index.html
        run: mkdir -p core/web/assets && touch core/web/assets/index.html
      - name: Download Go vendor packages
        run: go mod download
      - name: Build binary
        run: go build -tags test -o chainlink.test .
      - name: Setup DB
        run: ./chainlink.test local db preparetest
      - name: Run tests
        id: run-tests
        env:
          OUTPUT_FILE: ./output.txt
          USE_TEE: false
        run: ./tools/bin/${{ matrix.cmd }} ./...
      - name: Print postgres logs
        if: always()
        run: docker compose logs postgres
        working-directory: ./.github/actions/setup-postgres
